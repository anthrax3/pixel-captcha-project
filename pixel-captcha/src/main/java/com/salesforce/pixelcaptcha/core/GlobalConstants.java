/*
 * Copyright (c) 2017, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root  or https://opensource.org/licenses/BSD-3-Clause
 */

package com.salesforce.pixelcaptcha.core;

import java.awt.image.BufferedImage;

public class GlobalConstants {

    //	public static final ChallengeAndResponseCount[] challengeAndSolutionCounts = ChallengeAndResponseCount.values();
    public static final int DEFAULT_CHALLENGE_COUNT = 4;
    public static final int DEFAULT_RESPONSE_COUNT = 12;

    public static final int MIN_CHALLENGE_COUNT = 2;
    public static final int MIN_RESPONSE_COUNT = 10;

    public static final int MAX_CHALLENGE_COUNT = 4;
    public static final int MAX_RESPONSE_COUNT = 12;

    public static final int DEFAULT_WIDTH = 400;
    public static final int DEFAULT_HEIGHT = 300;

    public static final int MIN_ALLOWED_CODE_POINT = 0;
    public static final int MAX_ALLOWED_CODE_POINT = 0xFFFF;
    public static final String DEFAULT_CHAR_RANGE = "0-4095";
    public static final int STORAGE_SIZE = 1000000;
    public static final int CAPTCHA_TIMEOUT = 30 * 60; //30 mins timeout
    public static final int CHALLENGE_DELTA_PERCENTAGE = 10;

    public static final int MIN_PRINTABLE_CHARS = 20;
    public static final boolean ORDERED = false;

    //		public static final int DEFAULT_IMAGE_TYPE = BufferedImage.TYPE_USHORT_GRAY;
    public static final int DEFAULT_IMAGE_TYPE = BufferedImage.TYPE_USHORT_555_RGB;
    //
     /*
	  * I plotted the string "AWMICZ" with these different fonts (SERIF, SANS_SERIF, MONOSPACE and DIALOG) with font size of 150 
	  * The maximum width was 150 pixels with SERIF for the character M
	  * The maximum height was 110 pixels with multiple fonts for the character M
	  * 
	  * The below derived values are used to convert Font size to pixels (as multipliers with the Font size).
	  * A BUFFER value of will be added to introduce better spacing, and will be used in Future, in needed.
	  * */
    public static final double H_FONT_MULTIPLIER = 150.0 / 150.0;
    public static final double V_FONT_MULTIPLIER = 110.0 / 150.0;

    // This array was generated by VisibleCharFind in the utils directory
    // Was used earlier. No longer in use.
//    public static final int[] PRINTABLE_CHARS = PrintableCharFinder.getPrintableChars(65535);
//    public static final PrintableCharFinder printableCharFinder;
//
//	static {
//		printableCharFinder = PrintableCharFinder.getInstance();
//	}


}
